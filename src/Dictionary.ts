import arDictionary from "./Translations/ar.json";
import enDictionary from "./Translations/en.json";

export default interface Dictionary {
  urrevs: string;
  generalProductRating: string;
  userInterface: string;
  manufacturingQuality: string;
  priceQuality: string;
  camera: string;
  callsQuality: string;
  battery: string;
  pros: string;
  cons: string;
  like: string;
  liked: string;
  comment: string;
  share: string;
  seeMore: string;
  seeLess: string;
  iDontLikeThis: string;
  reply: string;
  price: string;
  manufacturingCompany: string;
  releaseDate: string;
  productDimensions: string;
  networkType: string;
  productWeight: string;
  simCard: string;
  displayType: string;
  displaySize: string;
  displayResolution: string;
  screenProtection: string;
  operatingSystem: string;
  chipset: string;
  CPU: string;
  GPU: string;
  externalMemory: string;
  internalMemory: string;
  mainCamera: string;
  frontCamera: string;
  loudSpeakers: string;
  wlan: string;
  bluetooth: string;
  GPS: string;
  NFC: string;
  radio: string;
  USB: string;
  sensors: string;
  charging: string;
  moreComments: string;
  jack3_5: string;
  egyptianPound: string;
  productName: string;
  productImage: string;
  companyRating: string;
  vote: string;
  answer: string;
  usedThisProductFor: string;
  acceptAnswer: string;
  acceptedAnswer: string;
  moreAnswers: string;
  usedThisFor: string;
  brandBriefing: string;
  googleAuth: string;
  facebookAuth: string;
  homeNavBarItem: string;
  AddNavBarItem: string;
  categoryNavBarItem: string;
  leaderboardNavBarItem: string;
  menuNavBarItem: string;
  smartphone: string;
  company: string;
  tabBarReviews: string;
  tabBarSpecs: string;
  tabBarReview: string;
  tabBarQuestion: string;
  tabBarQuestionsAndAnswers: string;
  addReview: string;
  addOwnedProduct: string;
  addQuestion: string;
  compareWithAnotherProduct: string;
  companyReview: string;
  productReview: string;
  askedQuestion: string;
  collectedStars: string;
  myReviews: string;
  myQuestions: string;
  ownedProducts: string;
  yourInvitationCode: string;
  inviteYourFriendsToWriteTheirReviews: string;
  questionsOnMyProducts: string;
  helpOthersAndGetPoints: string;
  reviews: string;
  askedQuestions: string;
  short_thousands: string;
  short_millions: string;
  short_billions: string;
  setAsOwnedPhone: string;
  generalCompanyRating: string;
  writeAComment: string;
  writeAnAnswer: string;
  shareInvitationLink: string;
  updateProducts: string;
  addCompetition: string;
  compare: string;
  postReview: string;
  postQuestion: string;
  howToWin: string;
  inviteFriends: string;
  remainigDays: string;
  thePrizeIs: string;
  thereIsNoInternetConnection: string;
  accountExistsWithDifferentCredential: string;
  invalidCredential: string;
  invalidVerificationCode: string;
  invalidVerificationId: string;
  operationNotAllowed: string;
  userDisabled: string;
  userNotFound: string;
  wrongPassword: string;
  unknownFirebaseError: string;
  toggleLanguageButtonText: string;
  somethingWentWrong: string;
  ok: string;
  invalidToken: string;
  processFailed: string;
  tokenExpired: string;
  tokenRevoked: string;
  tooManyRequests: string;
  youDoNotExistInTheSystem: string;
  connectionTimedOut: string;
  receivingDataTimedout: string;
  sendingDataTimedout: string;
  requestWasCancelled: string;
  unknownNetworkError: string;
  addingCompetition: string;
  enterCompetitionFinishingDate: string;
  competitionEndDate: string;
  enterNumberOfWinners: string;
  winnersNumber: string;
  enterPrizeName: string;
  prizeName: string;
  enterPrizeImageLink: string;
  prizeImageLink: string;
  youHaveGotPointsForLoggingInThroughTheMobileApp: string;
  updating: string;
  automatically: string;
  manually: string;
  updateHasNotBeenCompleted: string;
  successfullyCompleted: string;
  listOfNewlyAddedProducts: string;
  lastUpdateWasDone: string;
  inPreposition: string;
  listOfNewlyAddedCompanies: string;
  noUpdateOperationsYet: string;
  youAreNotAdmin: string;
  thereIsARunningUpdateOperationRightNow: string;
  myProfile: string;
  phones: string;
  companies: string;
  lastUpdatedIn: string;
  addACompetition: string;
  theLastCompetitionTookPlaceIn: string;
  competitionPrize: string;
  reviewEncouragement: string;
  disclaimer: string;
  markedAsAcceptedPrompt: string;
  referralCodeHelpPrompt: string;
  howToWinPrompt: string;
  howToWinPromptTitle: string;
  ourMobileApp: string;
  howToWinPrompt2: string;
  previousSearchResults: string;
  searchForAProductOrACompany: string;
  badRequest: string;
  search: string;
  updateProductsList: string;
  adminPanel: string;
  invitationCodePrompt: string;
  sureToLogOut: string;
  logOut: string;
  cancel: string;
  logOutFromAllDevices: string;
  withWord: string;
  writeProductName: string;
  specifications: string;
  similarPhones: string;
  comparison: string;
  chooseProduct: string;
  howLongHaveYouOwnedThisProduct: string;
  rateOverallExpericence: string;
  purchaseDate: string;
  whatDoYouLikeAboutThisProduct: string;
  whatDoYouHateAboutThisProduct: string;
  howDoYouRateTheManufacturer: string;
  WhatDoYouLikeAbout: string;
  whatDoYouHateAbout: string;
  invitationCode: string;
  enterInvitationCode: string;
  internalServerError: string;
  enterNumberOfWinnersErrorMsg: string;
  AddPrizeNameErrorMsg: string;
  prizeImageUrlErrorMsg: string;
  likedAboutProductErrorMsg: string;
  hateAboutProductErrorMsg: string;
  likedAboutManufacturerErrorMsg: string;
  hatedAboutManufacturerErrorMsg: string;
  purchaseDateErrorMsg: string;
  competitionEndDateErrorMsg: string;
  productNameErrorMsg: string;
  questionsAboutMyProducts: string;
  settings: string;
  aboutUs: string;
  termsOfUse: string;
  privacyPolicy: string;
  postedQuestions: string;
  youHaveAlreadyReportedThisElement: string;
  youHaveAlreadyReviewedThisPhoneBefore: string;
  postedSuccessfully: string;
  youHaveEarned: string;
  point: string;
  seePost: string;
  successfullyReported: string;
  youHaveSelectedDateBeforePhoneRelease: string;
  youHaventReviewedThatPhone: string;
  youCantAnswerAQuestionMessage: string;
  reviewNow: string;
}

interface FullDictionary {
  ar: Dictionary;
  en: Dictionary;
}

export const text: FullDictionary = {
  ar: arDictionary,
  en: enDictionary,
};
